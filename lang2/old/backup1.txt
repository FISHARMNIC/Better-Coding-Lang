# "(int:1) 123" mallocs one block of data with the value of "123"
# It then returns the address of that block
# "*" gets the value of whats stored in that address
# "jon: int" creates an integer pointer (integer variable)

# Foo points to the value 123
foo: (int) * (int:1) 123

# You can also do: foo: (int) 123
# Bob contains the base addres of our array (of 5 items)
bob: (int*) (int:5) 1|2|3|4|5

# Jon is also the base address of another array (of 3 items)
jon: (char*) (char:3) 'A'|'B'|'C'

# Nico is the base address of an string array
nico: (char*) (char:?) "hello_world"

# The above is basically this:
nico2: (char*) (char:6) 'H'|'e'|'l'|'l'|'o'|0

# Number printing:
printLn(%i, foo)
printLn(%i, 321)

# Array Indexing:
printLn(%i, * bob)
++ bob
printLn(%i, * bob)
-- bob
printLn(%i, bob[2])

# String and char Indexing:
printLn(%c, jon[1])
printLn(%s, nico)
printLn(%s, nico2)
printLn(%s, (char:?) "testing123")
